// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: checkout.proto

package checkoutservice

import (
	"context"

	"gomall/service/checkout/rpc/types/checkout"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Address        = checkout.Address
	CartItem       = checkout.CartItem
	CheckoutReq    = checkout.CheckoutReq
	CheckoutResp   = checkout.CheckoutResp
	CreditCardInfo = checkout.CreditCardInfo

	CheckoutService interface {
		Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutResp, error)
	}

	defaultCheckoutService struct {
		cli zrpc.Client
	}
)

func NewCheckoutService(cli zrpc.Client) CheckoutService {
	return &defaultCheckoutService{
		cli: cli,
	}
}

func (m *defaultCheckoutService) Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutResp, error) {
	client := checkout.NewCheckoutServiceClient(m.cli.Conn())
	return client.Checkout(ctx, in, opts...)
}
