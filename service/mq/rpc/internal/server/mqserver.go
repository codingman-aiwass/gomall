// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: mq.proto

package server

import (
	"context"

	"gomall/service/mq/rpc/internal/logic"
	"gomall/service/mq/rpc/internal/svc"
	"gomall/service/mq/rpc/types/mq"
)

type MqServer struct {
	svcCtx *svc.ServiceContext
	mq.UnimplementedMqServer
}

func NewMqServer(svcCtx *svc.ServiceContext) *MqServer {
	return &MqServer{
		svcCtx: svcCtx,
	}
}

// 发送延时消息
func (s *MqServer) SendDelayMessage(ctx context.Context, in *mq.SendDelayMessageReq) (*mq.SendDelayMessageResp, error) {
	l := logic.NewSendDelayMessageLogic(ctx, s.svcCtx)
	return l.SendDelayMessage(in)
}

// 发送普通消息
func (s *MqServer) SendMessage(ctx context.Context, in *mq.SendMessageReq) (*mq.SendMessageResp, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}
