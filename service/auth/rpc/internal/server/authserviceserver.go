// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: auth.proto

package server

import (
	"context"

	"gomall/service/auth/rpc/internal/logic"
	"gomall/service/auth/rpc/internal/svc"
	"gomall/service/auth/rpc/types/auth"
)

type AuthServiceServer struct {
	svcCtx *svc.ServiceContext
	auth.UnimplementedAuthServiceServer
}

func NewAuthServiceServer(svcCtx *svc.ServiceContext) *AuthServiceServer {
	return &AuthServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *AuthServiceServer) DeliverTokenByRPC(ctx context.Context, in *auth.DeliverTokenReq) (*auth.DeliveryResp, error) {
	l := logic.NewDeliverTokenByRPCLogic(ctx, s.svcCtx)
	return l.DeliverTokenByRPC(in)
}

func (s *AuthServiceServer) VerifyTokenByRPC(ctx context.Context, in *auth.VerifyTokenReq) (*auth.VerifyResp, error) {
	l := logic.NewVerifyTokenByRPCLogic(ctx, s.svcCtx)
	return l.VerifyTokenByRPC(in)
}

func (s *AuthServiceServer) RefreshTokenByRPC(ctx context.Context, in *auth.RefreshTokenReq) (*auth.RefreshTokenResp, error) {
	l := logic.NewRefreshTokenByRPCLogic(ctx, s.svcCtx)
	return l.RefreshTokenByRPC(in)
}

func (s *AuthServiceServer) ExpireTokenByRPC(ctx context.Context, in *auth.ExpireTokenReq) (*auth.ExpireTokenResp, error) {
	l := logic.NewExpireTokenByRPCLogic(ctx, s.svcCtx)
	return l.ExpireTokenByRPC(in)
}
