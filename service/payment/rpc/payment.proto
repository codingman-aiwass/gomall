syntax = "proto3";

package payment;

option go_package = "/payment";


service PaymentService {
  rpc Charge(ChargeReq) returns (ChargeResp) {}
  rpc CancelPayment(CancelPaymentReq) returns (CancelPaymentResp) {}
  rpc QueryPayment(QueryPaymentReq) returns (QueryPaymentResp) {}
}

message CreditCardInfo {
  string credit_card_number = 1;
  int32 credit_card_cvv = 2;
  int32 credit_card_expiration_year = 3;
  int32 credit_card_expiration_month = 4;
}

message ChargeReq {
  float amount = 1;
  CreditCardInfo credit_card = 2;
  uint32 order_id = 3;
  uint32 user_id = 4;
}

message ChargeResp {
  uint64 transaction_id = 1;
  string success = 2;
}

message CancelPaymentReq {
  uint64 transaction_id = 1; // 支付交易ID
  uint32 order_id = 2;       // 可选，关联订单ID
}
// 取消支付请求和响应： 用于取消特定交易。
message CancelPaymentResp {
  bool success = 1;          // 是否取消成功
  string message = 2;        // 错误或状态信息
}

message QueryPaymentReq {
  uint64 transaction_id = 1; // 支付交易ID
}
// 查询支付状态： 用于检查支付交易的当前状态（成功、失败、处理中）。
message QueryPaymentResp {
  string status = 1;         // 支付状态，例如 "success", "failed", "pending"
  float amount = 2;          // 支付金额
  uint32 order_id = 3;       // 关联订单ID
}
